/**
 * @file cube.h
 * @brief 立方体渲染头文件
 * @details 定义了立方体渲染类，负责立方体的顶点数据管理和渲染
 */

#pragma once
#include <GL/glew.h>
#include <vector>
#include <string>

/**
 * @class Cube
 * @brief 立方体渲染类，使用单例模式实现
 * @details 负责立方体的顶点数据管理、缓冲区设置和渲染操作
 */
class Cube
{
public:
    /**
     * @brief 获取Cube单例实例
     * @return Cube& 单例实例的引用
     */
    static Cube &getInstance()
    {
        static Cube instance;
        return instance;
    }

    /**
     * @brief 初始化立方体
     * @details 创建和设置顶点缓冲区对象
     */
    void init();

    /**
     * @brief 渲染立方体
     * @details 使用当前着色器程序渲染立方体
     */
    void render();

    /**
     * @brief 清理资源
     * @details 删除顶点缓冲区对象
     */
    void cleanup();

private:
    // 私有构造函数和析构函数，确保单例模式
    Cube() = default;
    ~Cube() = default;

    // 删除拷贝构造函数和赋值运算符
    Cube(const Cube &) = delete;
    Cube &operator=(const Cube &) = delete;

    GLuint VAO = 0; // 顶点数组对象
    GLuint VBO = 0; // 顶点缓冲区对象
    GLuint EBO = 0; // 元素缓冲区对象

    /**
     * @brief 立方体顶点数据
     * @details 包含36个顶点，每个顶点包含位置(x,y,z)和颜色(r,g,b)
     * 每个面使用不同的颜色：
     * - 前面：红色 (1,0,0)
     * - 后面：绿色 (0,1,0)
     * - 左面：蓝色 (0,0,1)
     * - 右面：黄色 (1,1,0)
     * - 底面：青色 (0,1,1)
     * - 顶面：品红 (1,0,1)
     */
    const float vertices[216] = {
        // 前面 (红色)
        -0.5f, -0.5f, -0.5f, 1.0f, 0.0f, 0.0f,
        0.5f, -0.5f, -0.5f, 1.0f, 0.0f, 0.0f,
        0.5f, 0.5f, -0.5f, 1.0f, 0.0f, 0.0f,
        0.5f, 0.5f, -0.5f, 1.0f, 0.0f, 0.0f,
        -0.5f, 0.5f, -0.5f, 1.0f, 0.0f, 0.0f,
        -0.5f, -0.5f, -0.5f, 1.0f, 0.0f, 0.0f,

        // 后面 (绿色)
        -0.5f, -0.5f, 0.5f, 0.0f, 1.0f, 0.0f,
        0.5f, -0.5f, 0.5f, 0.0f, 1.0f, 0.0f,
        0.5f, 0.5f, 0.5f, 0.0f, 1.0f, 0.0f,
        0.5f, 0.5f, 0.5f, 0.0f, 1.0f, 0.0f,
        -0.5f, 0.5f, 0.5f, 0.0f, 1.0f, 0.0f,
        -0.5f, -0.5f, 0.5f, 0.0f, 1.0f, 0.0f,

        // 左面 (蓝色)
        -0.5f, 0.5f, 0.5f, 0.0f, 0.0f, 1.0f,
        -0.5f, 0.5f, -0.5f, 0.0f, 0.0f, 1.0f,
        -0.5f, -0.5f, -0.5f, 0.0f, 0.0f, 1.0f,
        -0.5f, -0.5f, -0.5f, 0.0f, 0.0f, 1.0f,
        -0.5f, -0.5f, 0.5f, 0.0f, 0.0f, 1.0f,
        -0.5f, 0.5f, 0.5f, 0.0f, 0.0f, 1.0f,

        // 右面 (黄色)
        0.5f, 0.5f, 0.5f, 1.0f, 1.0f, 0.0f,
        0.5f, 0.5f, -0.5f, 1.0f, 1.0f, 0.0f,
        0.5f, -0.5f, -0.5f, 1.0f, 1.0f, 0.0f,
        0.5f, -0.5f, -0.5f, 1.0f, 1.0f, 0.0f,
        0.5f, -0.5f, 0.5f, 1.0f, 1.0f, 0.0f,
        0.5f, 0.5f, 0.5f, 1.0f, 1.0f, 0.0f,

        // 底面 (青色)
        -0.5f, -0.5f, -0.5f, 0.0f, 1.0f, 1.0f,
        0.5f, -0.5f, -0.5f, 0.0f, 1.0f, 1.0f,
        0.5f, -0.5f, 0.5f, 0.0f, 1.0f, 1.0f,
        0.5f, -0.5f, 0.5f, 0.0f, 1.0f, 1.0f,
        -0.5f, -0.5f, 0.5f, 0.0f, 1.0f, 1.0f,
        -0.5f, -0.5f, -0.5f, 0.0f, 1.0f, 1.0f,

        // 顶面 (品红)
        -0.5f, 0.5f, -0.5f, 1.0f, 0.0f, 1.0f,
        0.5f, 0.5f, -0.5f, 1.0f, 0.0f, 1.0f,
        0.5f, 0.5f, 0.5f, 1.0f, 0.0f, 1.0f,
        0.5f, 0.5f, 0.5f, 1.0f, 0.0f, 1.0f,
        -0.5f, 0.5f, 0.5f, 1.0f, 0.0f, 1.0f,
        -0.5f, 0.5f, -0.5f, 1.0f, 0.0f, 1.0f};
};